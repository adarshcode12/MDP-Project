{"version":3,"sources":["./src/app/editor/editor.component.html","./src/app/editor/editable-article-resolver.service.ts","./src/app/editor/editor-routing.module.ts","./src/app/editor/editor.component.ts","./src/app/editor/editor.module.ts"],"names":[],"mappings":"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","file":"editor-editor-module-es5.js","sourcesContent":["module.exports = \"<main class=\\\"profile-page\\\">\\r\\n    <section class=\\\"section-profile-cover section-shaped my-0\\\">\\r\\n      <!-- Circles background -->\\r\\n      <div class=\\\"shape shape-style-1 shape-primary alpha-4\\\">\\r\\n        <span></span>\\r\\n        <span></span>\\r\\n        <span></span>\\r\\n        <span></span>\\r\\n        <span></span>\\r\\n        <span></span>\\r\\n        <span></span>\\r\\n      </div>\\r\\n      <!-- SVG separator -->\\r\\n      <div class=\\\"separator separator-bottom separator-skew\\\">\\r\\n        <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n          <polygon class=\\\"fill-white\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\r\\n        </svg>\\r\\n      </div>\\r\\n    </section>\\r\\n    <section class=\\\"section section-lg pt-lg-0 section-contact-us\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n          <div class=\\\"row justify-content-center mt--300\\\">\\r\\n            <div class=\\\"col-lg-8\\\">\\r\\n              <div class=\\\"card bg-gradient-secondary shadow\\\">\\r\\n                <div class=\\\"card-body p-lg-5\\\">\\r\\n                  <h4 class=\\\"mb-1\\\">Write an Article</h4>\\r\\n                  <p class=\\\"mt-0\\\">and place in a best position.</p>\\r\\n                  <app-list-errors [errors]=\\\"errors\\\"></app-list-errors>\\r\\n                  <form [formGroup]=\\\"articleForm\\\">\\r\\n                      <fieldset [disabled]=\\\"isSubmitting\\\">\\r\\n                  <div class=\\\"form-group mt-5\\\" [ngClass]=\\\"{'focused':focus===true}\\\">\\r\\n                    <div class=\\\"input-group input-group-alternative\\\">\\r\\n                      <div class=\\\"input-group-prepend\\\">\\r\\n                        <span class=\\\"input-group-text\\\"></span>\\r\\n                      </div>\\r\\n                      <input class=\\\"form-control\\\" formControlName=\\\"title\\\"\\r\\n                      type=\\\"text\\\"\\r\\n                      placeholder=\\\"Article Title\\\" (focus)=\\\"focus=true\\\" (blur)=\\\"focus=false\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'focused':focus1===true}\\\">\\r\\n                    <div class=\\\"input-group input-group-alternative\\\">\\r\\n                      <div class=\\\"input-group-prepend\\\">\\r\\n                        <span class=\\\"input-group-text\\\"></span>\\r\\n                      </div>\\r\\n                      <input class=\\\"form-control\\\" formControlName=\\\"description\\\"\\r\\n                      type=\\\"text\\\"\\r\\n                      placeholder=\\\"What's this article about?\\\"  (focus)=\\\"focus1=true\\\" (blur)=\\\"focus1=false\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group mb-4\\\">\\r\\n                    <textarea class=\\\"form-control form-control-alternative\\\" formControlName=\\\"body\\\"\\r\\n                    rows=\\\"8\\\"\\r\\n                    placeholder=\\\"Write your article (in markdown)\\\"></textarea>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group mt-5\\\" [ngClass]=\\\"{'focused':focus===true}\\\">\\r\\n                      <div class=\\\"input-group input-group-alternative\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                          <span class=\\\"input-group-text\\\"></span>\\r\\n                        </div>\\r\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\"\\r\\n                        placeholder=\\\"Enter tags\\\"\\r\\n                        [formControl]=\\\"tagField\\\"\\r\\n                        (keyup.enter)=\\\"addTag()\\\"  (focus)=\\\"focus=true\\\" (blur)=\\\"focus=false\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"tag-list\\\">\\r\\n                        <span *ngFor=\\\"let tag of article.tagList\\\"\\r\\n                          class=\\\"tag-default tag-pill\\\">\\r\\n                          <i class=\\\"ion-close-round\\\" (click)=\\\"removeTag(tag)\\\"></i>\\r\\n                          {{ tag }}\\r\\n                        </span>\\r\\n                      </div>\\r\\n                  <div>\\r\\n                    <button type=\\\"button\\\" (click)=\\\"submitForm()\\\" class=\\\"btn btn-default btn-round btn-block btn-lg\\\">Publish Article</button>\\r\\n                  </div>\\r\\n                  </fieldset>\\r\\n                  </form>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </section>\\r\\n  </main>\\r\\n\\r\\n\\r\\n\"","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Article, ArticlesService, UserService } from '../core';\r\nimport { catchError ,  map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class EditableArticleResolver implements Resolve<Article> {\r\n  constructor(\r\n    private articlesService: ArticlesService,\r\n    private router: Router,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  resolve(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<any> {\r\n\r\n    return this.articlesService.get(route.params['slug'])\r\n      .pipe(\r\n        map(\r\n          article => {\r\n            if (this.userService.getCurrentUser().username === article.author.username) {\r\n              return article;\r\n            } else {\r\n              this.router.navigateByUrl('/');\r\n            }\r\n          }\r\n        ),\r\n        catchError((err) => this.router.navigateByUrl('/'))\r\n      );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EditorComponent } from './editor.component';\r\nimport { EditableArticleResolver } from './editable-article-resolver.service';\r\nimport { AuthGuard } from '../core';\r\nimport { SharedModule } from '../shared';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EditorComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: ':slug',\r\n    component: EditorComponent,\r\n    canActivate: [AuthGuard],\r\n    resolve: {\r\n      article: EditableArticleResolver\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EditorRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Article, ArticlesService } from '../core';\r\n\r\n@Component({\r\n  selector: 'app-editor-page',\r\n  templateUrl: './editor.component.html'\r\n})\r\nexport class EditorComponent implements OnInit {\r\n  article: Article = {} as Article;\r\n  articleForm: FormGroup;\r\n  tagField = new FormControl();\r\n  errors: Object = {};\r\n  isSubmitting = false;\r\n\r\n  constructor(\r\n    private articlesService: ArticlesService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // use the FormBuilder to create a form group\r\n    this.articleForm = this.fb.group({\r\n      title: '',\r\n      description: '',\r\n      body: ''\r\n    });\r\n\r\n    // Initialized tagList as empty array\r\n    this.article.tagList = [];\r\n\r\n    // Optional: subscribe to value changes on the form\r\n    // this.articleForm.valueChanges.subscribe(value => this.updateArticle(value));\r\n  }\r\n\r\n  ngOnInit() {\r\n    // If there's an article prefetched, load it\r\n    this.route.data.subscribe((data: { article: Article }) => {\r\n      if (data.article) {\r\n        this.article = data.article;\r\n        this.articleForm.patchValue(data.article);\r\n      }\r\n    });\r\n  }\r\n\r\n  addTag() {\r\n    // retrieve tag control\r\n    const tag = this.tagField.value;\r\n    // only add tag if it does not exist yet\r\n    if (this.article.tagList.indexOf(tag) < 0) {\r\n      this.article.tagList.push(tag);\r\n    }\r\n    // clear the input\r\n    this.tagField.reset('');\r\n  }\r\n\r\n  removeTag(tagName: string) {\r\n    this.article.tagList = this.article.tagList.filter(tag => tag !== tagName);\r\n  }\r\n\r\n  submitForm() {\r\n    this.isSubmitting = true;\r\n\r\n    // update the model\r\n    this.updateArticle(this.articleForm.value);\r\n\r\n    // post the changes\r\n    this.articlesService.save(this.article).subscribe(\r\n      article => this.router.navigateByUrl('/article/' + article.slug),\r\n      err => {\r\n        this.errors = err;\r\n        this.isSubmitting = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  updateArticle(values: Object) {\r\n    Object.assign(this.article, values);\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { EditorComponent } from './editor.component';\r\nimport { EditableArticleResolver } from './editable-article-resolver.service';\r\nimport { AuthGuard } from '../core';\r\nimport { SharedModule } from '../shared';\r\nimport { EditorRoutingModule } from './editor-routing.module';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, EditorRoutingModule],\r\n  declarations: [EditorComponent],\r\n  providers: [EditableArticleResolver]\r\n})\r\nexport class EditorModule {}\r\n"],"sourceRoot":""}